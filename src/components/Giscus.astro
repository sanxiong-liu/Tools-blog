---
import { SELECTORS } from '@/constants/dom';
import { cn } from '@/utils/styles';

import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'div'> {}

const { GISCUS_WIDGET_ID } = SELECTORS;

const { class: className } = Astro.props;
---

<div class={cn('giscus', className)}>
  <giscus-widget
    id={GISCUS_WIDGET_ID}
    repo="nemanjam/nemanjam.github.io"
    repoid="R_kgDOKc-LeA"
    category="General"
    categoryid="DIC_kwDOKc-LeM4CZ7UL"
    mapping="pathname"
    term="Comments are welcome"
    strict="0"
    reactionsenabled="1"
    emitmetadata="0"
    inputposition="bottom"
    theme="light"
    lang="en"
    crossorigin="anonymous"
    loading="lazy"></giscus-widget>
</div>

<script>
  import 'giscus';

  import { SELECTORS } from '@/constants/dom';
  import { THEME_CONFIG } from '@/constants/theme';
  import { sendModeToGiscus } from '@/utils/dom';
  import { getCurrentMode } from '@/utils/theme';

  import type { ChangeThemeCustomEvent } from '@/types/constants';

  const { GISCUS_WIDGET_SELECTOR } = SELECTORS;
  const { CHANGE_EVENT } = THEME_CONFIG;

  // will run only on page load
  const giscusWidget = document.querySelector(GISCUS_WIDGET_SELECTOR);
  const mode = getCurrentMode();

  if (giscusWidget) giscusWidget.setAttribute('theme', mode);

  // will run on button click
  document.addEventListener(CHANGE_EVENT, (event) => {
    const customEvent = event as ChangeThemeCustomEvent;
    const { mode } = customEvent.detail.theme;

    sendModeToGiscus(mode);
  });
</script>
